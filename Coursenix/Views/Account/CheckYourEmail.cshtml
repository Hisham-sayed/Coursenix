@model VerifyCodeViewModel
@{
    Layout = "_Layout";
}
@section css {
    <link rel="stylesheet" href="/css/check_your_email.css">
}

<form asp-action="CheckYourEmail" asp-controller="Account" method="post" autocomplete="off">
    <input type="hidden" asp-for="Purpose" />

    <div class="content">
        <h1>Check Your Email</h1>
        <p id="temp">We've sent a verification code to your email address. Please enter the code below to continue.</p>

        <div class="code-inputs">
            <!-- One-digit numeric boxes -->
            <input type="text" maxlength="1" class="code-input" asp-for="Digit1" id="digit1" name="digit1" inputmode="numeric" />
            <input type="text" maxlength="1" class="code-input" asp-for="Digit2" id="digit2" name="digit2" inputmode="numeric" />
            <input type="text" maxlength="1" class="code-input" asp-for="Digit3" id="digit3" name="digit3" inputmode="numeric" />
            <input type="text" maxlength="1" class="code-input" asp-for="Digit4" id="digit4" name="digit4" inputmode="numeric" />
            <input type="text" maxlength="1" class="code-input" asp-for="Digit5" id="digit5" name="digit5" inputmode="numeric" />
            <input type="text" maxlength="1" class="code-input" asp-for="Digit6" id="digit6" name="digit6" inputmode="numeric" />
        </div>

        <span asp-validation-summary="All" class="text-danger"></span>

        <button type="submit" class="verify-btn">Verify code</button>

        <div>
            Didn't receive a code? <span class="resend-link">Resend Code</span>
        </div>

        @{
            bool chk = Model.Purpose == "ResetPassword";
        }
        <a asp-action=@(chk ? "ForgotPassword" : "Index") asp-controller=@(chk ? "Account" : "Home") class="back-link">Back</a>
    </div>
</form>

@section scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const inputs = document.querySelectorAll('.code-input');

            inputs.forEach((input, i) => {
                /* ── Auto-move forward ── */
                input.addEventListener('input', e => {
                    if (e.target.value.length === 1 && i < inputs.length - 1) {
                        inputs[i + 1].focus();
                    }
                });

                /* ── Auto-move back on empty + Backspace ── */
                input.addEventListener('keydown', e => {
                    if (e.key === 'Backspace' && !e.target.value && i > 0) {
                        inputs[i - 1].focus();
                    }
                });

                /* Highlight existing value for quick overwrite */
                input.addEventListener('focus', e => e.target.select());
            });

            /* ── Optional: allow pasting a full 6-digit code ── */
            document.querySelector('.code-inputs').addEventListener('paste', e => {
                const data = (e.clipboardData || window.clipboardData).getData('text').trim();
                if (/^\d{6}$/.test(data)) {
                    e.preventDefault();
                    data.split('').forEach((ch, idx) => inputs[idx].value = ch);
                    inputs[inputs.length - 1].focus();
                }
            });
        });
    </script>
}
